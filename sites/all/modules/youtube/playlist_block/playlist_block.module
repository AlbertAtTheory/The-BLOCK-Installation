<?php
/**
 * @file
 * Module file for playlist_block.
 */

/**
 * @defgroup playlist_block Playlist Block
 * @ingroup youtube_api
 * @{
 * Simple YouTube Playlist in a Block.
 *
 * This module allows for quick and easy display of a single YouTube playlist
 * in a system block that can be placed anywhere on a site.
 */

/**
 * Implements hook_block_info().
 *
 * We only provide one block here which simply allows the setting of a single
 * YouTube playlist for display.
 * 
 * @todo Allow multiple playlists.
 */
function playlist_block_block_info() {
  $blocks['playlist_block_default'] = array(
    // info: The name of the block.
    'info' => t('YouTube: Playlist'),
    // Block caching options (per role, per user, etc.)
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * Customize the YouTube playlist ID.
 */
function playlist_block_block_configure($delta = '') {
  $form = array();
  if ($delta == 'playlist_block_default') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options
    // (block title, page visibility, etc.) and the save button.
    $form['block_youtube_playlist'] = array(
      '#type' => 'textfield',
      '#title' => t('YouTube playlist ID'),
      '#size' => 60,
      '#description' => t('ID of the YouTube playlist.'),
      '#default_value' => variable_get('block_youtube_playlist'),
    );
    $date_formats = array();
    $date_types = system_get_date_types();
    foreach ($date_types as $key => $value) {
      $date_formats[$value['type']] = check_plain(t($value['title'] . ' format')) . ': ' . format_date(REQUEST_TIME, $value['type']);
    }
    $form['block_youtube_playlist_date_format'] = array(
      '#type' => 'select',
      '#title' => t('Date format'),
      '#options' => $date_formats,
      '#description' => t('Format used to display upload date.'),
      '#default_value' => variable_get('block_youtube_playlist_date_format'),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * This hook declares how the configured options for a block
 * provided by this module are saved.
 */
function playlist_block_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'playlist_block_default') {
    // Have Drupal save the string to the database.
    variable_set('block_youtube_playlist', $edit['block_youtube_playlist']);
    variable_set('block_youtube_playlist_date_format', $edit['block_youtube_playlist_date_format']);
  }
  return;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function playlist_block_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'playlist_block_default':
      drupal_add_js('https://www.youtube.com/iframe_api');
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $playlist_fetch = youtube_fetch_playlist(variable_get('block_youtube_playlist'));
      $block['subject'] = t($playlist_fetch['title']);
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = playlist_block_contents($delta, $playlist_fetch);
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function playlist_block_contents($which_block, $playlist_data) {
  switch ($which_block) {
    case 'playlist_block_default':
      return array(
        '#theme' => 'youtube_playlist_block',
        '#playlist' => $playlist_data,
      );
  }
}

/**
 * Implements hook_theme().
 */
function playlist_block_theme($existing, $type, $theme, $path) {
  return array(
    'youtube_playlist_block' => array(
      'template' => 'youtube_playlist_block',
      'variables' => array('playlist' => ''),
      'path' => drupal_get_path('module', 'playlist_block') . '/templates'
    )
  );
}

/**
 * @} End of "defgroup playlist_block".
 */
